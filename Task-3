import Foundation

// –û—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –≤–æ –≤—Ä–µ–º—è –∞—Ç–∞–∫–∏
enum BattleError: Error {
    case attackMissed   // –∞—Ç–∞–∫–∞ –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∞—Å—å
    case dragonBlock // –¥—Ä–∞–∫–æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∞—Ç–∞–∫—É
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–µ—Ä–æ—è
struct Hero {
    let name: String
}

// –§—É–Ω–∫—Ü–∏—è –∞—Ç–∞–∫–∏ –¥—Ä–∞–∫–æ–Ω–∞
func attackDragon(hero: inout Hero) throws {
    print("‚öîÔ∏è \(hero.name) –ø—ã—Ç–∞–µ—Ç—Å—è –∞—Ç–∞–∫–æ–≤–∞—Ç—å –¥—Ä–∞–∫–æ–Ω–∞!")

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 2
    let outcome = Int.random(in: 0...2)

    switch outcome {
    case 0:
        throw BattleError.attackMissed
    case 1:
        throw BattleError.dragonBlock
    default:
        print("–£—Å–ø–µ—Ö! \(hero.name) –ø–æ—Ä–∞–∑–∏–ª –¥—Ä–∞–∫–æ–Ω–∞!")
    }
}
// –ü–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
var hero = Hero(name: "–ë–∞–ª–¥—É—Ä–∞–Ω")

do {
    try attackDragon(hero: &hero)
} catch BattleError.attackMissed {
    print("üí® –ê—Ç–∞–∫–∞ –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∞—Å—å! –î—Ä–∞–∫–æ–Ω —É—Å–∫–æ–ª—å–∑–Ω—É–ª.")
} catch BattleError.dragonBlock {
    print("–î—Ä–∞–∫–æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∞—Ç–∞–∫—É!")
} catch {
    print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –±–∏—Ç–≤–µ.")
}
